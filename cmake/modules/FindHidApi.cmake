# TODO: udev/libusb checks for systems missing pkg-config
# 1. check if hidapi needs libusb
# 2. check if libusb needs udev
# 3. check if hidapi needs pthread

macro(check_bundled_hidapi_package)
  find_path(HIDAPI_DIR hidapi/hidapi.h NO_DEFAULT_PATH  PATHS ${CMAKE_SOURCE_DIR}/deps/hidapi ${CMAKE_SOURCE_DIR}/deps/hidapi-0.7.0 ${UHID_HIDAPI_DIR})
  if (NOT HIDAPI_DIR)
    message(FATAL_ERROR "Please download and unpack to hidapi to ${CMAKE_SOURCE_DIR}/deps/hidapi")
    message(FATAL_ERROR ".. or pass a valid -DUHID_HIDAPI_DIR= to cmake")
  else()
    message(STATUS "Using hidapi in ${HIDAPI_DIR}")
  endif()
  set(HIDAPI_INCLUDE_DIRS "${HIDAPI_DIR};${HIDAPI_DIR}/hidapi")

  if (WIN32 OR MSYS OR MINGW)
    set(HIDAPI_SOURCES "${HIDAPI_DIR}/windows/hid.c")
    set(HIDAPI_LIBRARIES "setupapi")
  elseif(APPLE)
    set(HIDAPI_SOURCES "${HIDAPI_DIR}/mac/hid.c")
    set(HIDAPI_LIBRARIES "-framework IOKit -framework CoreFoundation")
  else()
    set(HIDAPI_SOURCES "${HIDAPI_DIR}/linux/hid-libusb.c")
  endif()
  set(HIDAPI_STATIC_LIBRARIES ${HIDAPI_LIBRARIES})
endmacro()

macro(check_system_hidapi)

endmacro()

if (CMAKE_BUILD_TYPE MATCHES "StaticRelease")
  set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
endif()

FIND_PACKAGE(PkgConfig)
if (PKGCONFIG_FOUND)
  PKG_CHECK_MODULES(HIDAPI hidapi-libusb)
  if (CMAKE_BUILD_TYPE MATCHES "StaticRelease")
    PKG_CHECK_MODULES(LIBUSB libusb-1.0)
    PKG_CHECK_MODULES(UDEV libudev)
  endif()
  set(HIDAPI_STATIC_LIBRARIES "-Wl,-Bstatic ${HIDAPI_LDFLAGS} ${LIBUSB_LDFLAGS} -Wl,-Bdynamic ${UDEV_LDFLAGS} -lpthread")
endif()

if((NOT HIDAPI_FOUND))
  message(STATUS "hidapi not found via pkg-config, trying find_library()")
  find_library(HIDAPI NAMES hidapi hidapi-raw hidapi-libusb)
  if (NOT HIDAPI)
    message(STATUS "Failed to find system installation of hidapi")
  else()
    message(STATUS "Found HIDAPI: ${HIDAPI}")
    if (NOT LIBUSB_FOUND)
      find_library(LIBUSB usb-1.0)
      message(STATUS "Found (manually) libusb: ${LIBUSB}")
      set(LIBUSB_FOUND YES)
      set(LIBUSB_LIBRARIES "${LIBUSB}")
    endif()
    if (NOT ICONV_FOUND)
      find_library(ICONV iconv)
      message(STATUS "Found (manually) iconv: ${ICONV}")
      set(ICONV_FOUND YES)
      set(ICONV_LIBRARIES "${ICONV}")
    endif()

    set(HIDAPI_LIBRARIES "${HIDAPI}")
    set(HIDAPI_STATIC_LIBRARIES ${HIDAPI} ${LIBUSB_LIBRARIES} ${ICONV_LIBRARIES} -lpthread)
    set(HIDAPI_FOUND YES)
    find_path(HIDAPI_INCLUDE_DIRS hidapi/hidapi.h)
    message(STATUS "Include files in: ${HIDAPI_INCLUDE_DIRS}")
  endif()
endif()

if (NOT HIDAPI_FOUND)
  message(STATUS "Failed to find hidapi in the system, trying bundled")
  check_bundled_hidapi_package()
endif()
